#!/bin/bash

# Set the network and database
export NETWORK=kusama
export DATABASE=rocksdb

# Validator service
commands=("edit" "enable" "disable" "start" "stop" "status" "reload" "restart")
for command in "${commands[@]}"; do
  function "$command"() {
    sudo systemctl "$command" "$NETWORK.service"
  }
done

# Logs CentOS/Rocky
function logsnow() { sudo tail -f /var/log/messages; }
function logs() { sudo tail -n 1000 /var/log/messages; }

# Updating polkadot client
function version() { polkadot --version; }
function download() {
    curl -s https://api.github.com/repos/paritytech/polkadot/releases/latest | jq -r '.assets[] | select(.name | endswith("polkadot")) | .browser_download_url' | xargs sudo curl -L -o polkadot_latest && sudo chmod +x polkadot_latest && ./polkadot_latest --version;
}
function update() { stop && sudo cp polkadot_latest /usr/local/bin/polkadot && start; }
function scriptupdate() {
    git clone https://github.com/kusamaxi/polkacli ~/polkacli
    mv ~/polkacli/polkacli ~/.polkacli
    source ~/.bashrc
    rm -rf ~/polkacli
}

# Installing polkashots (https://ksm-rocksdb.polkashots.io/)
function shotdl() { wget https://ksm-rocksdb.polkashots.io/snapshot -O ~/kusama.RocksDb.tar.lz4; }
function shotupdate() {
    if stop; then
        rm -rf ~/.local/share/polkadot/chains/ksmcc3
        mkdir -p ~/.local/share/polkadot/chains/ksmcc3
        lz4 -c -d kusama.RocksDb.tar.lz4 | tar -x -C ~/.local/share/polkadot/chains/ksmcc3
        start
    fi
}
function shotdel() { rm -v ~/kusama.RocksDb.tar.lz4; }

# RPC-commands(advanced)
function rotatekeys() {
    curl -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "author_rotateKeys", "params":[]}' http://localhost:9933 >> ~/sessionkeys.log
    tail -1 ~/sessionkeys.log
}
function epochauthorship() {
    curl -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "babe_epochAuthorship", "params":[]}' http://localhost:9933
}

# Define the polkacli command
function polkacli() {
  # Get the name of the function to call
  local function_name="$1"

  # Shift the arguments to remove the function name
  shift

  # Call the specified function with the remaining arguments
  "$function_name" "$@"
}

# Print a list of available functions when polkacli is called with no arguments
if [[ $# -eq 0 ]]; then
  echo "Available functions:"
  typeset -F | awk '{print "  " $3}'
else
  # Call the specified function with the remaining arguments
  polkacli "$@"
fi
